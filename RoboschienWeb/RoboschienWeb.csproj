<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup Label="Globals">
    <SccProjectName>SAK</SccProjectName>
    <SccProvider>SAK</SccProvider>
    <SccAuxPath>SAK</SccAuxPath>
    <SccLocalPath>SAK</SccLocalPath>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks>netcoreapp2.2;net461</TargetFrameworks>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <AssemblyName />
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Bricelam.EntityFrameworkCore.Pluralizer" Version="1.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.5.1" />
    <PackageReference Include="Microsoft.AspNet.WebApi.Client" Version="5.2.6" />
    <PackageReference Include="Microsoft.AspNetCore" Version="2.1.6" />
    <PackageReference Include="Microsoft.AspNetCore.HttpsPolicy" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc" Version="2.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.1.2" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.Session" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.StaticFiles" Version="2.1.1" />
    <PackageReference Include="Microsoft.Azure.Storage.Blob" Version="9.4.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="2.1.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.1.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.BrowserLink" Version="2.1.0" />
    <PackageReference Include="NLog.Config" Version="4.7.5" />
    <PackageReference Include="NLog.Web.AspNetCore" Version="4.9.3" />
	<PackageReference Include="NWebsec.AspNetCore.Middleware" Version="2.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="4.0.1" />
    <PackageReference Include="System.Data.DataSetExtensions" Version="4.5.0" />
    <PackageReference Include="System.Data.SQLite" Version="1.0.109.2" />
    <PackageReference Include="System.Drawing.Common" Version="4.6.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\components\help-certificate\help-certificate.component.spec.ts" />
    <None Remove="ClientApp\src\app\components\help-certificate\help-certificate.component.ts" />
    <None Remove="ClientApp\src\app\components\help-content\help-content.component.spec.ts" />
    <None Remove="ClientApp\src\app\components\help-content\help-content.component.ts" />
    <None Remove="ClientApp\src\app\models\Captcha.ts" />
    <None Remove="ClientApp\src\app\models\DntCaptchaBase.ts" />
    <None Remove="ClientApp\src\app\models\IllnessTypes.ts" />
    <None Remove="ClientApp\src\app\models\IllnessTypesRequest.ts" />
    <None Remove="ClientApp\src\app\models\IllnessTypesResponse.ts" />
    <None Remove="ClientApp\src\app\models\RequestTypes.ts" />
    <None Remove="ClientApp\src\app\models\RequestTypesRequest.ts" />
    <None Remove="ClientApp\src\app\models\RequestTypesResponse.ts" />
    <None Remove="ClientApp\src\app\models\RouteUrl.ts" />
    <None Remove="ClientApp\src\app\models\SessionData.ts" />
    <None Remove="ClientApp\src\app\services\roboschienSpainservice\roboschienSpain.service.ts" />
    <None Remove="ClientApp\src\environments\environment.dev.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\components\imprints\" />
    <Folder Include="opt\app-root\lib\" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="System.Configuration" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\components\help-certificate\help-certificate.component.spec.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\help-certificate\help-certificate.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\help-content\help-content.component.spec.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\help-content\help-content.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\Captcha.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\DntCaptchaBase.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\IllnessTypes.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\IllnessTypesRequest.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\IllnessTypesResponse.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\RequestTypes.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\RequestTypesRequest.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\RequestTypesResponse.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\RouteUrl.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\SessionData.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\roboschienSpainservice\roboschienSpain.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\environments\environment.dev.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Update="linux-x64-57_binding.node">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
