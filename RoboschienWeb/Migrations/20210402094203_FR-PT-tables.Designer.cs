// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoboschienWeb.Models.Entities;

namespace RoboschienWeb.Migrations
{
    [DbContext(typeof(SickLeaveContext))]
    [Migration("20210402094203_FR-PT-tables")]
    partial class FRPTtables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RoboschienWeb.Models.Entities.ApplicationVersionDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppName");

                    b.Property<string>("MobileOsName");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int>("VersionCode");

                    b.Property<string>("VersionName");

                    b.HasKey("ID");

                    b.ToTable("ApplicationVersionDetails");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.EmailConfiguration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailFrom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("EmailSubject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("EmailTo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("EmailType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MailContentPart1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("MailContentPart2")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("MailContentPart3")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.HasIndex("id")
                        .HasName("IX_FK_EmailConfigurations");

                    b.ToTable("EmailConfiguration");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.EmailInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BccMailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailContent");

                    b.Property<int?>("EmployeeLeaveInformation_FRId");

                    b.Property<int?>("EmployeeLeaveInformation_PTId");

                    b.Property<bool?>("IsEmailSent");

                    b.Property<int>("LeaveId");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeLeaveInformation_FRId");

                    b.HasIndex("EmployeeLeaveInformation_PTId");

                    b.HasIndex("LeaveId")
                        .HasName("IX_FK_EmailInformation_EmployeeLeaveInformation");

                    b.ToTable("EmailInformation");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.EmployeeLeaveInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlobId");

                    b.Property<string>("CertificateData");

                    b.Property<bool?>("Consent");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DataPrivacyTimeStamp");

                    b.Property<string>("EmailId")
                        .HasMaxLength(300);

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("EndDate")
                        .HasMaxLength(200);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("IsAccident");

                    b.Property<string>("IsFirstTimeIllness");

                    b.Property<bool?>("IsSynced");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100);

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("RequestSource")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SecretKey");

                    b.Property<string>("SessionKey");

                    b.Property<string>("StartDate")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("EmployeeLeaveInformation");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.EmployeeLeaveInformation_FR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlobId");

                    b.Property<string>("CertificateData");

                    b.Property<bool?>("Consent");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DataPrivacyTimeStamp");

                    b.Property<string>("EmailId");

                    b.Property<string>("EmployeeId");

                    b.Property<string>("EndDate");

                    b.Property<string>("FirstName");

                    b.Property<string>("IsAccident");

                    b.Property<string>("IsFirstTimeIllness");

                    b.Property<bool>("IsOcrCheck");

                    b.Property<bool?>("IsSynced");

                    b.Property<string>("LastName");

                    b.Property<string>("Locale");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ReferenceNumber");

                    b.Property<string>("RequestSource");

                    b.Property<string>("SecretKey");

                    b.Property<int>("SelectedCountryCode");

                    b.Property<string>("SessionKey");

                    b.Property<string>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("EmployeeLeaveInformations_FR");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.EmployeeLeaveInformation_PT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlobId");

                    b.Property<string>("CertificateData");

                    b.Property<bool?>("Consent");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DataPrivacyTimeStamp");

                    b.Property<string>("EmailId");

                    b.Property<string>("EmployeeId");

                    b.Property<string>("EndDate");

                    b.Property<string>("FirstName");

                    b.Property<string>("IsAccident");

                    b.Property<string>("IsFirstTimeIllness");

                    b.Property<bool>("IsOcrCheck");

                    b.Property<bool?>("IsSynced");

                    b.Property<string>("LastName");

                    b.Property<string>("Locale");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ReferenceNumber");

                    b.Property<string>("RequestSource");

                    b.Property<string>("SecretKey");

                    b.Property<int>("SelectedCountryCode");

                    b.Property<string>("SessionKey");

                    b.Property<string>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("EmployeeLeaveInformations_PT");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ControllerName");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ExceptionDetails");

                    b.Property<string>("MethodName");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.IllnessTypeDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode");

                    b.Property<string>("IllnessType");

                    b.HasKey("Id");

                    b.ToTable("IllnessTypeDetails");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.JobConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive");

                    b.Property<string>("JobDescription")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("JobFrequency")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("JobConfiguration");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.JobExecutionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("JobId");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("JobId")
                        .HasName("IX_FK_JobExecutionDetails_JobConfiguration");

                    b.HasIndex("StatusId")
                        .HasName("IX_FK_JobExecutionDetails_JobStatus");

                    b.ToTable("JobExecutionDetails");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.JobStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("JobStatus1")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("StatusDescription")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("JobStatus");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.ReferenceNumberDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ReferenceNumber");

                    b.HasKey("Id");

                    b.ToTable("ReferenceNumberDetails");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.EmailInformation", b =>
                {
                    b.HasOne("RoboschienWeb.Models.Entities.EmployeeLeaveInformation_FR")
                        .WithMany("EmailInformations")
                        .HasForeignKey("EmployeeLeaveInformation_FRId");

                    b.HasOne("RoboschienWeb.Models.Entities.EmployeeLeaveInformation_PT")
                        .WithMany("EmailInformations")
                        .HasForeignKey("EmployeeLeaveInformation_PTId");

                    b.HasOne("RoboschienWeb.Models.Entities.EmployeeLeaveInformation", "Leave")
                        .WithMany("EmailInformations")
                        .HasForeignKey("LeaveId")
                        .HasConstraintName("FK_EmailInformation_EmployeeLeaveInformation");
                });

            modelBuilder.Entity("RoboschienWeb.Models.Entities.JobExecutionDetail", b =>
                {
                    b.HasOne("RoboschienWeb.Models.Entities.JobConfiguration", "Job")
                        .WithMany("JobExecutionDetailJobs")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK_JobExecutionDetails_JobConfiguration");

                    b.HasOne("RoboschienWeb.Models.Entities.JobConfiguration", "Status")
                        .WithMany("JobExecutionDetailStatus")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_JobExecutionDetails_JobStatus");

                    b.HasOne("RoboschienWeb.Models.Entities.JobStatus", "StatusNavigation")
                        .WithMany("JobExecutionDetails")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK__JobExecut__Statu__108B795B");
                });
#pragma warning restore 612, 618
        }
    }
}
